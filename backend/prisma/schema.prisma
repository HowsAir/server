// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Tabla Role en vez de un enum
model Role {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  users       User[]    // Relaci√≥n con usuarios

  @@map("roles")  // Map to 'roles' table in the DB
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  role      Role      @relation(fields: [roleId], references: [id])
  roleId    Int
  nodes     Node[]

  @@map("users") // Map to 'users' table in the DB
}

model Node {
  id              Int         @id @default(autoincrement())
  registrationDate DateTime
  user            User        @relation(fields: [userId], references: [id])
  userId          Int
  nodeType        NodeType    @relation(fields: [nodeTypeId], references: [id])
  nodeTypeId      Int
  measurements    Measurement[]

  @@map("nodes")  // Map to 'nodes' table in the DB
}

model Measurement {
  id              Int       @id @default(autoincrement())
  date            DateTime
  latitude        Float
  longitude       Float
  value           Float
  node            Node      @relation(fields: [nodeId], references: [id])
  nodeId          Int

  @@map("measurements")  // Map to 'measurements' table in the DB
}

model NodeType {
  id            Int         @id @default(autoincrement())
  name          String
  nodes         Node[]
  thresholds    Threshold[] // One-to-many relationship with Threshold

  @@map("node_types")  // Map to 'node_types' table in the DB
}

model Threshold {
  id            Int       @id @default(autoincrement())
  lowValue      Float
  highValue     Float
  nodeType      NodeType  @relation(fields: [nodeTypeId], references: [id])
  nodeTypeId    Int

  @@map("thresholds")  // Map to 'thresholds' table in the DB
}
